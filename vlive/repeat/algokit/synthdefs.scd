(
~t = ~t ? 1; // need ~t

SynthDef(\modenv, { arg out=0, amp=0.1, gate=1;
	var sig;
	sig = EnvGen.kr(\env.kr(Env([1,2,1],[0.1,0.8])), gate, doneAction:2);
	Out.kr(out, sig);
}).add;

SynthDef(\scape1, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, scat=0.1;
	var sig;
	var size = 8;
	var ar = (1..8)/8;
	sig = SinOsc.ar(freq);
	sig = sig + LFSaw.ar(freq * (ar*scat+1));
	sig = sig + LFCub.ar(freq * (ar*1+1));
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	pan = pan + SinOsc.kr(1 * ~t * (ar*scat+1) * SinOsc.kr(8*~t,mul:0.3,add:1));
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\tigrain, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = SinOsc.ar(freq * ( 1 + ( SinOsc.ar(\fmf.kr(24) * ( 1 + ( SinOsc.ar([4,8,16]*~t, 0.2) * 1.41 )) * XLine.kr(1,0.001,4)) * 1 )));
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig * 1;
	pan = pan + LFNoise1.ar((1..4)/48,mul:0.5);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\tigrain2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = SinOsc.ar(freq * [1,1.01]);
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig * 1;
	pan = pan + LFNoise1.ar((1..4)/48,mul:0.5);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;
SynthDef(\tigrain3, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([1,1/18,1],[0.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,2,1],[0.1,0.8]), 1);
	env3 = EnvGen.kr(Env([1,1.02,1],[0.1,0.8]), 1);
	freq = freq * env3;
	sig = LFSaw.ar(freq * [1,1.01,2,1/2]);
	sig = RLPF.ar(sig, ( \lpfratio.kr(1) * freq* [1,1.1] ).clip(20,19000), \rq.kr(0.1) * [1,1.1] * env1);
	sig = sig.tanh;
	sig = RLPF.ar(sig, ( \lpfratio.kr * freq* [2,1.1] * env2 ).clip(20,19000), 0.5);
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig * 2;
	pan = pan + LFNoise1.ar((1..4)/48,mul:0.5);
	sig = sig + DelayC.ar(sig,0.01,0.001 * [0.1,2,1]);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\kigrain1, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = LFSaw.ar(freq/8 * [1,1.01]) * 0.451;
	//sig = sig + LFNoise1.ar(freq);
	//sig = BPF.ar(sig, freq,0.1) + sig;
	//sig = BPF.ar(sig, freq * SinOsc.kr(Rand(0.1,2)).range(2,1),0.5);
	sig = sig.tanh;
	sig = sig * EnvGen.ar(Env.adsr(0.1,0.1,0.8,0.1),gate,doneAction:2);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\trump, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([1,1/18,1],[0.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,2,1],[0.1,0.8]), 1);
	env3 = EnvGen.kr(Env([2.2,1.02,1],[0.001,0.8]), 1);
	freq = freq * env3;
	sig = LFSaw.ar(freq * [1,1.01,1.0002,1/2]) * \amps.kr([1,1,1,1]);
	sig = RLPF.ar(sig, ( \lpfratio.kr(1) * freq* [1,1.1] * env3 ).clip(20,19000), \rq.kr(0.1) * [1,1.1] * env1);
	sig = sig.tanh;
	sig = RLPF.ar(sig, ( \lpfratio.kr * freq* [2,1.1] * env2 * env3 ).clip(20,19000), 0.5);
	sig = sig * EnvGen.ar(Env.adsr(0.001,0.1,0.6,0.1),gate,doneAction:2);
	sig = sig * 1;
	sig = sig + DelayC.ar(sig,0.01,0.001 * [0.1,2,1]);
	pan = pan + LFNoise1.ar((1..4)/48,mul:0.5);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\blik, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = LFSaw.ar(freq * XLine.kr(1,4,8) * ( 1 + ( SinOsc.kr(1/21 * (1..8)) * SinOsc.kr(2*~t).range(0,0.1) )));
	sig = RLPF.ar(sig, \lpf.kr(5400) * SinOsc.kr((1..8)/8*0.1 * ( 1 + ( SinOsc.kr(1/9 * (1..8)/8) * 1 ))).range(4,1), \rq.kr(0.5));
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	pan = pan + SinOsc.ar((1..8) * ( 1 + ( SinOsc.kr(1/3) * 1 )), mul:0.3);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;
SynthDef(\blik2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = LFSaw.ar(freq * ( 1 + ( SinOsc.kr(1/21 * (1..8)) * SinOsc.kr(\fmampfmf.kr(1)).range(0,\fmampmax.kr(1)) * XLine.kr(0.001,1,\clean.kr(1)) )));
	sig = RLPF.ar(sig, \lpf.kr(5400) * SinOsc.kr((1..8)/8*0.1 * ( 1 + ( SinOsc.kr(1/9 * (1..8)/8) * 1 ))).range(4,1), \rq.kr(0.5));
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.01,0.1,0.8,3.1)),gate,doneAction:2);
	pan = pan + SinOsc.ar((1..8) * ( 1 + ( SinOsc.kr(1/3) * 1 )), mul:0.3);
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\chordscape, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = SinOsc.ar(freq * ( 1 + ( SinOsc.ar(freq * ( 1 + ( SinOsc.ar(freq * ( 1 + ( SinOsc.ar(freq*[1,1.01,1.001]) * 1 ))) * 1 )) ) * ( Line.kr(0.0001,0.51,2) ) ))  );
	sig.postln;
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.4),gate,doneAction:2);
	pan = pan + LFNoise1.kr(1/43 ! sig.size, mul:\panwizamp.kr(0.3));
	sig = Pan2.ar(sig, pan, amp).mean/2;

	Out.ar(out, sig);
}).add;

SynthDef(\lead, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, linetime=4;
	var sig;
	sig = SinOsc.ar(freq);
	sig = sig.fold2(\fold.kr(0.7) * ( (1..8)/8 * \foldspread.kr(1) + 1 ));
	sig.postln;
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.4),gate,doneAction:2);
	pan = pan + LFNoise1.kr(1/23, mul:0.3);
	sig = Pan2.ar(sig, pan, amp).mean/2;

	Out.ar(out, sig);
}).add;

SynthDef(\criz, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, linetime=4;
	var sig;
	sig = LFSaw.ar(freq);
	sig = sig.fold2(\fold.kr(0.7) * ( (1..8)/8 * \foldspread.kr(1) + 1 ));
	sig.postln;
	sig = RLPF.ar(sig, \lpfr.kr(2.4) * freq, \rq.kr(0.5));
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.01,0.1,0.8,0.4)),gate,doneAction:2);
	pan = pan + LFNoise1.kr(1/23, mul:0.3)/2;
	sig = Pan2.ar(sig, pan, amp).mean;

	Out.ar(out, sig);
}).add;

SynthDef(\scagrain, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, fspread=0.1;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	var xfreq = freq * ((0..7)/7 - 0.5 * fspread + 1);
	xfreq = xfreq * XLine.kr(1,2,2);
	sig1 = SinOsc.ar(xfreq);
	sig2 = LFSaw.ar(xfreq);
	sig2 = RLPF.ar(sig2, \lpfr.kr(2.2) * freq, \rq.kr(0.5));
	sig = SelectX.ar(\oscwave.kr(0), [sig1, sig2]);
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = Pan2.ar(sig, pan, amp).mean * 4;
	Out.ar(out, sig);
}).add;

SynthDef(\scagrain2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, fac1=0.1, fac2=1, fac3=1, fac4=1, fac5=1;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	sig = SinOsc.ar(freq * ( 1 + ( SinOsc.kr(freq/2 * ( 1 + ( SinOsc.kr((1..8) * fac1) * fac3 ))) * fac2 )));
	sig = LPF.ar(sig, freq * \lpfr.kr(2) * SinOsc.ar(fac4, mul:fac5, add:1) ) + ( sig/2 );
	sig = sig * EnvGen.ar(Env.adsr(0.2,0.1,0.8,0.2),gate,doneAction:2);
	sig = Pan2.ar(sig, pan, amp).mean * 4;
	Out.ar(out, sig);
}).add;

SynthDef(\guitar0, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([1,2,1],[0.001,[1,1.2,1.8]]), 1);
	env2 = EnvGen.kr(Env([1,Rand(0.5,3),1]/3,[0.1,1.8]), 1);
	sig = LFSaw.ar(freq *  [1,2,1/2] *.t [1,1.0001] * ( 1 + ( SinOsc.kr(Rand(0.0,20)) * Rand(0.0,0.01) )));
	sig.debug("sig");
	sig = RLPF.ar(sig, \lpfr.kr(1.2) * [1,1.001,1.1] * env1 * freq, \rq.kr(0.5) * env2);
	sig.debug("sig");
	sig = sig.mean;
	sig.debug("sig");
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.31,0.1,0.8,0.4)),gate,doneAction:2);
	//sig = Pan2.ar(sig, pan, amp);
	sig = sig * amp;
	Out.ar(out, sig);
}).add;
SynthDef(\guitar, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var afreq = freq *  [1,2,1/2];
	env1 = EnvGen.kr(Env([1,2,1],[0.001,[1,1.2,1.8]]), 1);
	env2 = EnvGen.kr(Env([1,Rand(0.5,3),1]/3,[0.1,1.8]), 1);
	sig = LFSaw.ar(afreq *.t [1,1.0001] * ( 1 + ( SinOsc.kr(ExpRand(0.00001,20) * [1,1.01]) * ExpRand(0.000001,0.051) )));
	sig = CombL.ar(sig, 1/20, 1/afreq,0.0) + sig / 1;
	sig = sig.tanh / 2;
	sig.debug("sig");
	sig = RLPF.ar(sig, \lpfr.kr(1.2) * [1,1.001,1.1] * env1 * freq, \rq.kr(0.5) * env2);
	sig.debug("sig");
	sig = sig.mean;
	sig.debug("sig");
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.01,0.1,0.8,0.1)),gate,doneAction:2);
	//sig = Pan2.ar(sig, pan, amp);
	sig = sig * amp;
	Out.ar(out, sig);
}).add;

SynthDef(\bruit, { arg out=0, freq=200, pan=0, amp=0.1, bufnum=0, gate=1;
	var sig;
	var phase;
	var lpf;
	//bufnum = BufDef(\bruit);
	phase = Phasor.ar(Impulse.kr(\trigrate.kr(1/2*~t)), \rate.kr(1),\start.kr(0),\end.kr(1)*BufFrames.kr(bufnum)).lag(\phaselag.kr(0.4));
	sig = BufRd.ar(2, bufnum, phase*\sign.kr(1));
	lpf = \lpfr.kr(1) * \trigrate.kr * SinOsc.ar(1 * [ [1,1/2,1/4,1/14] ]).range(1/2,4);
	lpf = lpf.clip(20,20000);
	sig = RLPF.ar(sig, lpf, \rq.kr(0.5)).flop.mean;
	sig.debug("sig");
	sig = sig * \gain.kr(1);
	sig = sig * EnvGen.kr(\asr.kr(Env.asr(0.01,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;

SynthDef(\bruit2, { arg out=0, freq=200, pan=0, amp=0.1, bufnum=0, gate=1;
	// with lpf instead of lpfr
	// start with bufframes
	var sig;
	var phase;
	var lpf;
	//bufnum = BufDef(\bruit);
	phase = Phasor.ar(Impulse.kr(\trigrate.kr(1/2*~t)), \rate.kr(1),\start.kr(0)*BufFrames.kr(bufnum),\end.kr(1)*BufFrames.kr(bufnum)).lag(\phaselag.kr(0.4));
	sig = BufRd.ar(2, bufnum, phase*\sign.kr(1));
	lpf = \lpf.kr(4000) * SinOsc.ar(1 * [ [1,1/2,1/4,1/14] ]).range(1/2,4);
	lpf = lpf.clip(20,20000);
	sig = RLPF.ar(sig, lpf, \rq.kr(0.5)).flop.mean;
	sig.debug("sig");
	sig = sig * \gain.kr(1);
	sig = sig * EnvGen.kr(\asr.kr(Env.asr(0.01,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;

SynthDef(\bruit3, { arg out=0, freq=200, pan=0, amp=0.1, bufnum=0, gate=1;
	// LFSaw instead of phasor
	var sig;
	var phase;
	var lpf;
	//bufnum = BufDef(\bruit);
	phase = LFSaw.ar(\rate.kr(1)/BufDur.kr(bufnum)).range(\start.kr(0)*BufFrames.kr(bufnum), \end.kr(1)*BufFrames.kr(bufnum)).lag(\phaselag.kr(0.4));
	sig = BufRd.ar(2, bufnum, phase*\sign.kr(1));
	lpf = \lpf.kr(4000) * SinOsc.ar(1 * [ [1,1/2,1/4,1/14] ]).range(1/2,4);
	lpf = lpf.clip(20,20000);
	sig = RLPF.ar(sig, lpf, \rq.kr(0.5)).flop.mean;
	sig.debug("sig");
	sig = sig * \gain.kr(1);
	sig = sig * EnvGen.kr(\asr.kr(Env.asr(0.01,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;

SynthDef(\fbfx1, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	sig = FreqShift.ar(sig, \shift.kr(0)) + sig;
	sig = RLPF.ar(sig, \lpf.kr(14000), \rq.kr(0.5) );
	sig = sig * EnvGen.kr(\asr.kr(Env.asr(0.01,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;

SynthDef(\fbfx2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	sig = FreqShift.ar(sig, \shift.kr(0)) + sig;
	sig = RLPF.ar(sig, \lpf.kr(14000), \rq.kr(0.5) );
	sig = sig.tanh;
	sig = Limiter.ar(sig);
	Out.ar(\inbus.kr, sig * \fb.kr(0.6));
	sig = SelectX.ar(\mix.kr(0.5), [ DelayC.ar(in, 0.04, \indelay.kr(0.04)), sig]);
	sig = sig * EnvGen.kr(\asr.kr(Env.asr(0.01,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;

SynthDef(\fbfx3, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	sig = DelayC.ar(sig, 1/2, \delay.kr(1/2/~t)) + sig;
	sig = RLPF.ar(sig, \lpf.kr(14000), \rq.kr(0.5) );
	sig = sig.tanh;
	sig = Limiter.ar(sig);
	Out.ar(\inbus.kr, sig * \fb.kr(0.6));
	sig = SelectX.ar(\mix.kr(0.5), [ DelayC.ar(in, 0.04, \indelay.kr(0.04)), sig]);
	sig = sig * EnvGen.kr(\asr.kr(Env.asr(0.01,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;

SynthDef(\leader1, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([1,2,1],[0.1,0.8]), \itrig.tr(1));
	env2 = EnvGen.kr(Env([1,2,1]/2,[0.1,0.8]), \itrig.tr);
	env3 = EnvGen.kr(Env([1,2,1,2,1]-1,[0.1,0.8,0.1,0.2]), \itrig.tr);
	env4 = EnvGen.kr(Env([1,2,[1,2]]*2,[0.1,0.8]), \itrig.tr);
	env5 = EnvGen.kr(\envamp.kr(Env([1,1,2,1,1],[0.1,0.3,0.8,0.3])), \itrig.tr);
	freq = freq + env4;
	sig = LFSaw.ar(freq.lag(0.4));
	sig1 = LFSaw.ar(freq.lag(0.5) * ( 1 + ( SinOsc.kr(freq*1/2) * 1 )));
	sig = SelectX.ar(env3, [sig, sig1]);
	sig = RLPF.ar(sig, \lpfr.kr(2) * [1,1.01] * env1 * freq.lag(0.3), \rq.kr(0.5));
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig * env2 * env5;
	pan = pan + sig.collect({ SinOsc.ar(1/12) * 0.1  });
	sig = sig / 1;
	sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

SynthDef(\leader2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([1,2,1],[0.1,0.8]), \itrig.tr(1));
	env2 = EnvGen.kr(Env([1,2,1]/2,[0.1,0.8]), \itrig.tr);
	env3 = EnvGen.kr(Env([1,2,1,2,1]-1,[0.1,0.8,0.1,0.2]), \itrig.tr);
	env4 = EnvGen.kr(Env([1,2,[1,2]]*2,[0.1,0.8]), \itrig.tr);
	env5 = EnvGen.kr(\envamp.kr(Env([1,1,2,1,1],[0.1,0.3,0.8,0.3])), \itrig.tr);
	freq = freq + env4;
	sig = LFSaw.ar(freq.lag(0.4));
	sig1 = LFSaw.ar(freq.lag(0.5) * ( 1 + ( SinOsc.kr(freq*1/2) * 1 )));
	sig = SelectX.ar(env3, [sig, sig1]);
	sig = RLPF.ar(sig, \lpfr.kr(2) * [1,1.01] * env1 * freq.lag(0.3), \rq.kr(0.5));
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig * env2 * env5;
	//pan = pan + sig.collect({ SinOsc.ar(1/12) * 0.1  });
	sig.debug("sig");
	sig = sig / 8 / 2;
	//sig = Pan2.ar(sig, pan, amp).mean;
	Out.ar(out, sig);
}).add;

);
