
(
	///// from draft6

SynthDef(\evol, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0,1/8,1],[2,2.1,2.8]/1), 1);
	sig = SinOsc.ar(freq * ( 1 + ( SinOsc.ar(72 * ( 1 + ( SinOsc.kr(1/12) * 1 ))) * env4 )));
	sig = sig * (LFSaw.ar(freq)*env1+1);
	sig = RLPF.ar(sig, \lpf.kr(10000) * env2, \rq.kr(0.5)) + ( sig );
	sig = RLPF.ar(sig, 1000 * env3, 0.5) + ( sig/4 );
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;

SynthDef(\evoltreb, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var dis;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0,1/8,1],[2,2.1,2.8]), 1);
//	env1 = 1;
//	env2 = 1;
//	env3 = 1;
//	env4 = 1;
	dis = 16/10;
	sig = SinOsc.ar(freq * [1,1] * ( 1 + ( SinOsc.ar(freq*0.75354) * env4 ))).mean;
	sig = sig * (LFSaw.ar(freq )*env1+1);
	sig = RLPF.ar(sig, \lpf.kr(10000) * env2, \rq.kr(0.5)) + ( sig );
	sig = RLPF.ar(sig, 1000 * env3, 0.5) + ( sig/4 );
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig / 2;
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
SynthDef(\evoltreb2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var dis;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0,1/8,1],[2,2.1,2.8]), 1);
//	env1 = 1;
//	env2 = 1;
//	env3 = 1;
//	env4 = 1;
	dis = 16/10;
	sig = SinOsc.ar(freq * [1,dis] * ( 1 + ( SinOsc.ar(freq*0.75354) * env4 ))).mean;
	sig = sig * (LFSaw.ar(freq )*env1+1);
	sig = RLPF.ar(sig, \lpf.kr(10000) * env2, \rq.kr(0.5)) + ( sig );
	sig = RLPF.ar(sig, 1000 * env3, 0.5) + ( sig/4 );
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig / 2;
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
SynthDef(\evoltreb3, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var dis;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0,1/8,1],[2,2.1,2.8]), 1);
//	env1 = 1;
//	env2 = 1;
//	env3 = 1;
//	env4 = 1;
	dis = SelectX.kr( SinOsc.kr(1/16).exprange(0.0001,1), [1, 16/10]);
	sig = SinOsc.ar(freq * [1,dis] * ( 1 + ( SinOsc.ar(freq*0.75354) * env4 ))).mean;
	sig = sig * (LFSaw.ar(freq )*env1+1);
	sig = RLPF.ar(sig, \lpf.kr(10000) * env2, \rq.kr(0.5)) + ( sig );
	sig = RLPF.ar(sig, 1000 * env3, 0.5) + ( sig/4 );
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig / 2;
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
);

(
SynthDef(\devol, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var lfo1, lfo2, lfo3, lfo4, lfo5, lfo6, lfo7, lfo8;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0,1/8,1],[2,2.1,2.8]/1), 1);
	lfo1 = SinOsc.ar(30 * env3).range(1/2,1);
	lfo2 = LFTri.ar(10 * env2).range(2,1);
	sig = SinOsc.ar(freq * ( 1 + ( SinOsc.ar(lfo2 *72 * ( 1 + ( SinOsc.kr(1/12) * 1 ))) * env4 )));
	sig = sig * (LFSaw.ar(freq)*env1+1);
	sig = RLPF.ar(sig, \lpf.kr(10000) * env2, \rq.kr(0.5)) + ( sig );
	sig = RLPF.ar(sig, 1000 * env3 * lfo1, 0.5) + ( sig/4 );
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
SynthDef(\devoltreb, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var dis;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0,1/8,1],[2,2.1,2.8]), 1);
//	env1 = 1;
//	env2 = 1;
//	env3 = 1;
//	env4 = 1;
	dis = SelectX.kr( SinOsc.kr(1/6 * env1).exprange(0.0001,1), [1, 16/10]);
	sig = SinOsc.ar(freq * [1,dis] * ( 1 + ( SinOsc.ar(freq*0.75354) * env4 ))).mean;
	sig = sig * (LFSaw.ar(freq )*env1+1);
	sig = RLPF.ar(sig, \lpf.kr(10000) * env2, \rq.kr(0.5)) + ( sig );
	sig = RLPF.ar(sig, 1000 * env3, 0.5) + ( sig/4 );
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = sig / 2;
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
SynthDef(\env, { arg out=0, gate=1;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	sig = SelectX.ar(\mix.kr(1), [in, sig]);
	sig = sig * EnvGen.kr(\iadsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), Trig1.kr(\itrig.tr(1),\isustain.kr(1)), doneAction:0);
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = sig * \gain.kr(1);
	Out.ar(out, sig);
}).add;
SynthDef(\envshifter, { arg out=0, gate=1;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	sig = SelectX.ar(\mix.kr(1), [in, sig]);
	sig = sig * EnvGen.kr(\iadsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), Trig1.kr(\itrig.tr(1),\isustain.kr(1)), doneAction:0);
	sig = CombL.ar(sig, 0.3,0.03,1)+sig;
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = sig * \gain.kr(1);
	Out.ar(out, sig);
}).add;

	SynthDef(\cymbalsimple2, { | out = 0, pan = 0.0 |
		var sig, env;
		var env1, env2, env3, env4, env5, env6, env7, env8;
		var freqs;
		env = EnvGen.ar(Env.perc(0.01, 2, curve: -4), doneAction: 2);
		env1 = EnvGen.kr(Env([0,1,0],[0.01,0.08]), 1);
		freqs = {exprand(30, 20000)}.dup(50) ++ {exprand(1020, 10000)}.dup(50);
		sig = HPF.ar(Ringz.ar(WhiteNoise.ar(0.1), freqs).mean, ( 1.1- env1 )*4000);
		sig = sig + EnvGen.ar(Env.perc(0.001,0.001,1), levelScale:1/2);
		sig = sig + LPF.ar(WhiteNoise.ar(0.1),EnvGen.ar(Env.perc(\att.kr(0.5),\rel.kr(5),1))* 20000+10,mul:2);
		sig = sig / 3;
		Out.ar(out, Pan2.ar(sig * env, pan));
	}).add;

SynthDef(\devol2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var lfo1, lfo2, lfo3, lfo4, lfo5, lfo6, lfo7, lfo8;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	env1 = EnvGen.kr(Env([0,2,1],[1.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,1/8,1],[1.1,2.8]), 1);
	env3 = EnvGen.kr(Env([1,1/8,1],[2.1,2.8]), 1);
	env4 = EnvGen.kr(Env([0,0.001,1/18,8],[2,2.4,2.8]/1), 1)+\bias1.kr(0);
	env5 = EnvGen.kr(Env([0,0.001,0.01,1/8],[2,4.1,2.8]/1), 1)+\bias2.kr(0);
	lfo1 = SinOsc.ar(\lfo1.kr(3) * env3).range(1/2,1);
	lfo2 = LFTri.ar(\lfo2.kr(1) * env2).range(2,1);
	freq = [1,1.0001]*freq;
	sig = SinOsc.ar(freq * ( 1 + ( SinOsc.ar(lfo2 *72 * ( 1 + ( SinOsc.ar(12) * env4 ))) * env5 )));
	sig2 = LFSaw.ar(freq * ( 1 + ( SinOsc.ar(lfo2 *72 * ( 1 + ( SinOsc.ar(12) * env4 ))) * env5 )));
	sig = SelectX.ar( SinOsc.ar(freq/1000), [sig, sig2]); 
	//sig = sig * (LFSaw.ar(freq)*env1+1);
	//sig = RLPF.ar(sig, freq * \lpfr.kr(1.2) * env2, \rq.kr(0.5)) + ( sig );
	//sig = RLPF.ar(sig, 1000 * env3 * lfo1, 0.5) + ( sig/4 );

	//sig2 = LFSaw.ar(freq);
	sig2 = sig;
	sig2 = RLPF.ar(sig2, freq * \lpfr.kr(1.2), \rq.kr(0.5));
	sig = sig2;
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	//sig = Pan2.ar(sig, pan, amp);
	sig = sig * amp;
	Out.ar(out, sig);
}).add;
);

(
SynthDef(\longrain, { arg out=0, gate=1, amp=0.1, pan=0, freq=200;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var ofreq = freq;
	sig = SinOsc.ar();
	freq = freq * ( SinOsc.ar(freq * \fmr.kr(1)) * \fmamp.kr(0.5) + 1 );
	sig1 = LFSaw.ar(freq);
	sig2 = LFPulse.ar(freq);
	sig3 = SinOsc.ar(freq);
	sig = SelectX.ar(\oscmix.kr(0.5)*2 * SinOsc.kr(Rand(3,1/4)).range(0,1), [sig1, sig2, sig3]);
	env1 = EnvGen.kr(Env([1/2,1.2,1.2],[0.01,0.8]), 1);
	sig = RLPF.ar(sig, \lpfr.kr(1/2) * ofreq * env1, \rq.kr(0.5));
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
);

(
SynthDef(\echoer, { arg out=0, gate=1;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([0,0,1,1],[0.0,0.4,0.8]), \itrig.tr(1));
	sig = in;
	sig = sig * SinOsc.ar(300);
	sig = CombL.ar(sig, 0.1,\delay.kr(0.011),\decay.kr(10)) + sig;
	sig = SelectX.ar(\mix.kr(1) * env1, [in, sig]);
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = sig * \gain.kr(1);
	Out.ar(out, sig);
}).add;
);

(
SynthDef(\drodro, { arg out=0, gate=1, amp=0.1, pan=0, freq=200;
	var sig;
	sig = SinOsc.ar(freq * ( SinOsc.ar(freq) * 1 + 1 ));
	sig = sig * SinOsc.ar(freq*( 3/2 ) * ( SinOsc.ar(sig.abs+0.1 * freq) * 1 + 1 ));
	//sig = sig * LFSaw.ar(313 * ( SinOsc.ar(sig) * 1 + 1 ));
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = Pan2.ar(sig, pan, amp);
	Out.ar(out, sig);
}).add;
SynthDef(\drodro, { arg out=0, gate=1, amp=0.1, pan=0, freq=200;
	var sig;
	sig = SinOsc.ar(freq * ((0..7)/7 - 0.5 * ( SinOsc.ar(Rand(0.01,0.1)) * 1 + 1 ) + 1)); 
	sig = sig + sig.fold2( SinOsc.ar(0.1 * [1,1.1])  ).mean / 2;
	//sig = sig * LFSaw.ar(313 * ( SinOsc.ar(sig) * 1 + 1 ));
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = Pan2.ar(sig.clump(4), pan, amp).mean;
	sig.mean.debug("sig");
	Out.ar(out, sig);
}).add;
SynthDef(\comby, { arg out=0, gate=1;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	sig = CombL.ar(sig, 0.4, 1/8/~t,1/~t) + sig;
	sig = SelectX.ar(\mix.kr(0.5), [in, sig]);
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.1,0.1,0.8,0.1)), gate, doneAction:2);
	sig = sig * \gain.kr(1);
	Out.ar(out, sig);
}).add;

//Pdef(\part).reset;
);
