
(
SynthDef(\playersec_osc, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, bufnum, speed=1, pos=0, doneAction=2, loop=0, velamp=1;
	// pos in seconds
	var sig;
	var sig1;
	var trigger = Impulse.ar(\trigfreq.kr(0));
	sig = PlayBuf.ar(2, bufnum, BufRateScale.kr(bufnum) * speed, trigger, startPos: (pos*BufSampleRate.kr(bufnum)), doneAction:doneAction, loop: loop);
	sig1 = RLPF.ar(sig, \lpfr.kr(1) * \trigfreq.kr, \rq.kr(0.5));
	sig = SelectX.ar(\lpmix.kr(0.5), [sig, sig1]);
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.001,0,1,0.01)),gate,doneAction:doneAction);
	//sig = Pan2.ar(sig, pan, 1).sum;
	Out.ar(out, sig * \gain.kr(1) * velamp);
}).add;
SynthDef(\playersec_osczig_fat, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, bufnum, speed=1, pos=0, doneAction=2, loop=0, velamp=1;
	// pos in seconds
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	var trigger = Impulse.ar(\trigfreq.kr(0) * [1,1/2,1/4,2]);
	var speedtrigger = Impulse.ar(\trigfreq.kr*2);
	speed = speed * Demand.ar(speedtrigger, 0, Dseq([
		1,-1,
	],inf));
	sig = PlayBuf.ar(2, bufnum, BufRateScale.kr(bufnum) * speed, trigger, startPos: (pos+[ [0,0.01] ]*BufSampleRate.kr(bufnum)), doneAction:doneAction, loop: loop).mean;
	env1 = EnvGen.kr(Env([1/2,1,2,1],[0.1,2.1,4.8]), 1);
	sig1 = RLPF.ar(sig, \lpfr.kr(1) * \trigfreq.kr * env1, \rq.kr(0.5));
	sig = SelectX.ar(\lpmix.kr(0.5), [sig, sig1]);
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.001,0,1,0.01)),gate,doneAction:doneAction);
	sig.debug("sig");
	sig = sig.flop.sum.debug("sig");
	//sig = Pan2.ar(sig, pan, 1).sum;
	Out.ar(out, sig * \gain.kr(1) * velamp);
}).add;
SynthDef(\playersec_zix2, { arg out=0, amp=0.1, gate=1, pan=0, freq=200, bufnum, speed=1, pos=0, doneAction=2, loop=0, trigger=1, velamp=1;
	// pos in seconds
	var sig;
	var sig1;
	var env1, env2, env3, env4, env5, env6, env7, env8;
	env1 = EnvGen.kr(Env([1,0.5,0],[0.1,0.8]), 1);
	env2 = EnvGen.kr(Env([1,0.5,0],[0.1,0.8]), 1);
	speed = speed * EnvGen.kr(Env([0.21,1,1,0.2,1],[0.12,1,0.12,0.12]), 1);
	sig = PlayBuf.ar(2, bufnum, BufRateScale.kr(bufnum) * speed, trigger, startPos: (pos*BufSampleRate.kr(bufnum)), doneAction:doneAction, loop: loop);
	sig = sig * EnvGen.ar(\adsr.kr(Env.adsr(0.001,0,1,0.01)),gate,doneAction:doneAction);
	//sig = FreqShift.ar(LPF.ar(sig, 4000), 2300) + HPF.ar(sig, 4000);
	sig = HPF.ar(sig, 6000)*18;
	//sig = Pan2.ar(sig, pan, 1).sum;
	Out.ar(out, sig * \gain.kr(1) * velamp);
}).add;
SynthDef(\comp, { arg out=0, gate=1,freq=200;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\sendbus2, \audio)), 2); 
	var sidein = InFeedback.ar(\sidebus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	//sig = sig + DelayC.ar(sig, 0.01, 0.0001 * [0.1235,1,0.86534]).mean/2;
	sig = Compander.ar(sig, sidein, \cpt.kr(0.4), \cpbelow.kr(1.001), \cpabove.kr(0.9), \cpclamp.kr(0.01), \cprelax.kr(0.1));
	sig = sig * \gain.kr(1);
	sig = SelectX.ar(\mix.kr(1), [in, sig]);
	//sig = in;
	sig = sig + CombL.ar(sig, 0.5, 0.5 * SinOsc.kr(1/12).range(1.01,1),1);
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.01,0,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;
SynthDef(\concombre, { arg out=0, gate=1,freq=200;
	var sig;
	var in = InFeedback.ar(\inbus.kr(BusDef(\sendbus2, \audio)), 2); 
	var sidein = InFeedback.ar(\sidebus.kr(BusDef(\zero, \audio)), 2); 
	sig = in;
	//sig = sig + DelayC.ar(sig, 0.01, 0.0001 * [0.1235,1,0.86534]).mean/2;
	sig = sig + CombL.ar(sig, 0.5, 0.5 * SinOsc.kr(1/12).range(1.01,1),1);
	sig = Compander.ar(sig, sidein, \cpt.kr(0.4), \cpbelow.kr(1.001), \cpabove.kr(0.9), \cpclamp.kr(0.01), \cprelax.kr(0.1));
	sig = sig * \gain.kr(1);
	sig = SelectX.ar(\mix.kr(1), [in, sig]);
	//sig = in;
	sig = sig * EnvGen.kr(\adsr.kr(Env.adsr(0.01,0,1,0.01)), gate, doneAction:2);
	Out.ar(out, sig);
}).add;
SynthDef(\droblip, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = SinOsc.ar(freq);
	sig = sig * ( 1 + ( SinOsc.ar((1..8)*100 * ( 1 + ( SinOsc.ar((1..8)*40 * ( 1 + ( SinOsc.kr((1..8)/88) * 1 ))) * 1 ))) * 1 ));
	sig = sig * ( 1 + ( SinOsc.ar((1..8)*101 * ( 1 + ( SinOsc.ar((1..8)*40 * ( 1 + ( SinOsc.kr((1..8)/88) * 1 ))) * 1 ))) * 1 ));
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	pan = LFNoise1.ar((1..8)/80);
	sig = Pan2.ar(sig, pan, amp.lag(0.1)).mean;
	sig.debug("sig");
	Out.ar(out, sig);
}).add;
SynthDef(\droblipbass, { arg out=0, amp=0.1, gate=1, pan=0, freq=200;
	var sig;
	sig = LFSaw.ar(freq);
	sig = sig* ( 1 + ( LFSaw.ar(freq * [1/2,1,2]) * 0.5 ));
	sig = sig.tanh;
	sig = sig * EnvGen.ar(Env.adsr(0.01,0.1,0.8,0.1),gate,doneAction:2);
	sig = LPF.ar(sig, 1000);
	sig = sig * 2;
	sig = HPF.ar(sig, 40);
	pan = LFNoise1.ar((1..8)/80)*0.01;
	sig = Pan2.ar(sig, pan, amp.lag(0.1)).mean;
	sig.debug("sig");
	Out.ar(out, sig);
}).add;
//Pdefn(\fxgroup, Pfunc({ GroupDef(\fx, 1, \addAfter)  }));
);
