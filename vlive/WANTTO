// EnvirGui : this seems to do nothing
g.envir.putAll((b: -12, r: 1, s: 2, t: 3, u: 4, v: 5))

// is there a way to map easily the param of Ndef or Pdef to MIDI ?
// why no way to remember spec with NdefGui ?
// why no way to edit Pdef arguments with PdefGui ?
// the example from PdefAllGui doc is from TdefAllGui, should be fixed

// how to use storeArgs and storeOn, seems to not follow the doc
	// why Post << Param doesnt use this method ? (like in .debug)
	storeOn { arg stream;
		stream << ("Param.new(\"" ++ this.asLabel ++ "\")");
	}

// GridLayout.setAlignment don't take point as stated in doc
		//3.do { y;
		//	playout.setAlignment(Point(x,y),\center);
		//}

// layout : how to have equal spacing for each row or column without fixing it ????
	// see: set stretch for each to =1 but this is cumbersome and don't work when a view can't shrink while the other can


// SimpleButton pass a QButton in action arg instead of the SimpleButton instance
	// also, there is no getter for label
	// setting the label discard setted color and background

// in 3.7, subclassing gui change, +Knob or +QKnob

// Env.postln should print Env arguments

// Ndef(\plop).set([100,200,300]) don't change the Ndef until rerunning (so change only NodeMap)


// see midi points after midi init, or init without creating more and more midi points

// supernova
- can't read synthdef saved
- playing buffer has craquement

// repeat pattern random value exactly the same



// use proxyspace like event
p = ProxySpace.new
p.known = true
p.hello = 10




// why ~path need end slash ???
PathName(Veco.main.project_path).asRelativePath(~path);
// why with .fileName need no end slash ???


/////////////////////////////////////
// why \fxtrig is triggered at each pattern yield even if it's zero everywhere
// because there is 1 in the dict of Ndef and it's remembered;
// but how to do it then ? ndef must not pat set when it's trigger rate

Ndef(~name+++\fx).set(\fxtrig, 1)

Ndef(~name+++\fx).put(0, { arg amp=0.1;
	var sig;
	var freq;
	var nfreq;
	var lim;
	freq = MouseX.kr(50,18700);
	nfreq = MouseY.kr(50,18700);
	freq = \freq.kr(0200).lag(0.1);
	freq = freq * [1,1.012,1/4,2.012,1/2,1.015];
	nfreq = 200;
	freq = freq * [1,1];
	freq = freq * EnvGen.kr(Env([1,4,1],[0.1,0.4]), \fxtrig.tr(0));
	sig = LFSaw.ar(freq + 1 * SinOsc.ar(100 * LFNoise1.kr(1/7).range(0,1),mul:10 * LFNoise1.kr(1/9).range(0,2)) );
	sig = SinOsc.ar(freq);
	sig = sig * \pregain.kr(1);
	lim = 0.5 * SinOsc.kr(1/11 * [1,1.23,1.154,1.1324,1.324]).range(0,2);
	lim = lim + ( LFPulse.ar(8/1 * [1,1/12] * ~t, 0.0, 0.1) * LFNoise1.ar(1/7).range(0,1));
	lim = lim * \lim.kr(1);
 	sig = 
		0
		//+ ( (sig.abs < 0.5) * tanh(0-sig) )
		+ ( (sig.abs > lim) * sig * sin(sig.abs/100) )
		+ ( (sig.abs <= lim) * sig )
		;
		 
	//sig = HPF.ar(sig, 800);
	//sig = sig / 3;
	sig = Limiter.ar(sig);
	
	amp = amp * \gain.kr(1);
	sig = Splay.ar(sig, \spread.kr(0.8), amp, \pan.kr(0));
	sig;
});

Ndef(~name+++\fx).put(1, \set -> Pbind(
	\freq, Pseq([100,200,700,350],inf),
	\fxtrig, 0,
	\dur, 4,
));
)


/////////////////////
// lag setting doesnt seems to work


Ndef(~name+++\fx).set(\xfreq, 1);
Ndef(~name+++\fx).lag(\xfreq, 8);


// crash 
1.nextTimeOnGrid(1) 


///////////////////////////////////////

using a stored synthdef don't work, must reexecute before
--> SynthDescLib.global.read in startup.scd

/////////////////////

work with poll but not without !!! heisenbug!!!

~toggle_fx.(~namex, ~albert+++\fx, \filter -> { arg in;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	sig = in;
	sig1 = RLPF.ar(sig ! 8, ( 
		Ndef(~albert+++\freq)*(1..8)/2
		* Duty.kr(1/8/~t, 0, Dseq([
			1,4,1,1,
			1,4,2,4,
			1,4,1,1,
			2,2,1.2,1.4,
		],inf))
	).poll.clip(20,1000)
	, 0.2)*LFPulse.ar((1..8)*1).range(0,1).lag(0.1);
	//sig = SelectX.ar( SinOsc.kr(1/4*~t * (1..8)*8).range(0,1), [sig, sig1]);
	sig = sig1;
	sig = sig.sum;
	sig.debug("sig");
	sig;

});


////////////////::

une fonction pour definir un Ndef sans le lancer
trouvé ! voir demo/ndef.scd


/////////////////

quelles sont les priorités ? les aspects de SC que j'aimerais mettre en lumiere, huiler, faciliter ?

- la gestion des differents parametres des differents objets sonores (ndef, pdef)
	- en faire des listes
	- les mapper sur du midi
	- les mapper sur des gui
	- presets et morphing

quelles sont les differentes facons de gerer le midi et la gui des parametres dans SC ?
pareil pour les midi scores (notes et courbes de paam)
il faut pouvoir les enregistrer, les afficher dans des belles timeline
les 
- ddwVoicer
- ktlLoop
- modality

- systeme de mapping des numero midi vers des noms et des structures
- systeme de mapping des noms midi vers des parametres
- systeme de mapping des param vers des gui
- enregistrement des events/notes
- enregistrement des param
