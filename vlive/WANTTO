/////////////////////////////////////

one thing need to be known, where to store files ?
NiceGui {
	classvar <>folder = "/home/workflow/stuff/supercollider/NiceGui/";
create a Project class with push/pop ?
	a path assigned to each project
	and variables associated to each project

and how to save non-code data
	- into archive
	- into local archive
	- into asCompileString local file

/////////////////

there is maybe a bug in Pbindef implementation, it check if pairs contains key but it should only check first value of each pair
bug if the key is used as a value somewhere

/////////////

why RangeSlider change range when setting lo but Rect change top when setting bottom ????

/////////////////////////////////
common errors:
/////

isNan:
ControlSpec(0,1,\exp)


////////////////////////////////

why View.layout = xxx add the layout instead of replacing it ??

///////////////////////

http://doc.sccode.org/Overviews/Methods.html#insetAllhttp://doc.sccode.org/Overviews/Methods.html#insetAll
what is a, b, c, d ???

/////////////////// example broken : http://doc.sccode.org/Guides/WritingClasses.html#Catching%20methods%20that%20are%20not%20explicitly%20defined

class does not understand ++



//////////////////// specs needed
- spec which can step with 1/32, 1/16, 1/8, 1/4, etc
- spec which substract 0.0001 in exponential mode to have 0 at 0
- spec which is exponential positively then exponential negatively
- spec which is sync with tempo (not sure if it's the best place to put this, maybe in param ?)
- center for spec: \unipolar has minval (0), \bipolar has middle (0), because MultiSliderView can show a middle

//////// NumberBox
don't increment exponentialy

////////// MasterFx
	seems cool but how to put an ordinary Ndef as a masterfx ?

///////// RoundNumberBox
	.step seems to do nothing, 1 is always the step
	at least in ChannelEQ

////////// ChannelEq
	how to use it without MixerChannel ?
	how to use it with MixerChannel ?
	investigate a bit before asking mailing list

///////// last example in EventLoop : recordEvent need some arguments
	e.recordEvent((instrument: \toc)); (instrument: \toc).play;
	when playing, the instrument is not used

	l.calcDeltas return an error, seems to be named calcRelDur now
	first example need this also

//// can't archive Ndef
Ndef(\lfo1, { SinOsc.kr(1).range(50,100)  });
Archive.global.put(\testndef, Ndef(\lfo1))
// reboot SC
Archive.global.at(\testndef); // error because server is nil in Ndef:printOn


// EnvirGui : this seems to do nothing
g.envir.putAll((b: -12, r: 1, s: 2, t: 3, u: 4, v: 5))

// is there a way to map easily the param of Ndef or Pdef to MIDI ?
// why no way to remember spec with NdefGui ?
// why no way to edit Pdef arguments with PdefGui ?
// the example from PdefAllGui doc is from TdefAllGui, should be fixed

// how to use storeArgs and storeOn, seems to not follow the doc
	// why Post << Param doesnt use this method ? (like in .debug)
	storeOn { arg stream;
		stream << ("Param.new(\"" ++ this.asLabel ++ "\")");
	}

// GridLayout.setAlignment don't take point as stated in doc
		//3.do { y;
		//	playout.setAlignment(Point(x,y),\center);
		//}

// layout : how to have equal spacing for each row or column without fixing it ????
	// see: set stretch for each to =1 but this is cumbersome and don't work when a view can't shrink while the other can


// SimpleButton pass a QButton in action arg instead of the SimpleButton instance
	// also, there is no getter for label
	// setting the label discard setted color and background

// in 3.7, subclassing gui change, +Knob or +QKnob

// Env.postln should print Env arguments

// Ndef(\plop).set([100,200,300]) don't change the Ndef until rerunning (so change only NodeMap)


// see midi points after midi init, or init without creating more and more midi points

// supernova
- can't read synthdef saved
- playing buffer has craquement

// repeat pattern random value exactly the same



// use proxyspace like event
p = ProxySpace.new
p.known = true
p.hello = 10




// why ~path need end slash ???
PathName(Veco.main.project_path).asRelativePath(~path);
// why with .fileName need no end slash ???


/////////////////////////////////////
// why \fxtrig is triggered at each pattern yield even if it's zero everywhere
// because there is 1 in the dict of Ndef and it's remembered;
// but how to do it then ? ndef must not pat set when it's trigger rate

Ndef(~name+++\fx).set(\fxtrig, 1)

Ndef(~name+++\fx).put(0, { arg amp=0.1;
	var sig;
	var freq;
	var nfreq;
	var lim;
	freq = MouseX.kr(50,18700);
	nfreq = MouseY.kr(50,18700);
	freq = \freq.kr(0200).lag(0.1);
	freq = freq * [1,1.012,1/4,2.012,1/2,1.015];
	nfreq = 200;
	freq = freq * [1,1];
	freq = freq * EnvGen.kr(Env([1,4,1],[0.1,0.4]), \fxtrig.tr(0));
	sig = LFSaw.ar(freq + 1 * SinOsc.ar(100 * LFNoise1.kr(1/7).range(0,1),mul:10 * LFNoise1.kr(1/9).range(0,2)) );
	sig = SinOsc.ar(freq);
	sig = sig * \pregain.kr(1);
	lim = 0.5 * SinOsc.kr(1/11 * [1,1.23,1.154,1.1324,1.324]).range(0,2);
	lim = lim + ( LFPulse.ar(8/1 * [1,1/12] * ~t, 0.0, 0.1) * LFNoise1.ar(1/7).range(0,1));
	lim = lim * \lim.kr(1);
 	sig = 
		0
		//+ ( (sig.abs < 0.5) * tanh(0-sig) )
		+ ( (sig.abs > lim) * sig * sin(sig.abs/100) )
		+ ( (sig.abs <= lim) * sig )
		;
		 
	//sig = HPF.ar(sig, 800);
	//sig = sig / 3;
	sig = Limiter.ar(sig);
	
	amp = amp * \gain.kr(1);
	sig = Splay.ar(sig, \spread.kr(0.8), amp, \pan.kr(0));
	sig;
});

Ndef(~name+++\fx).put(1, \set -> Pbind(
	\freq, Pseq([100,200,700,350],inf),
	\fxtrig, 0,
	\dur, 4,
));
)


/////////////////////
// lag setting doesnt seems to work


Ndef(~name+++\fx).set(\xfreq, 1);
Ndef(~name+++\fx).lag(\xfreq, 8);


// crash 
1.nextTimeOnGrid(1) 


///////////////////////////////////////

using a stored synthdef don't work, must reexecute before
--> SynthDescLib.global.read in startup.scd

/////////////////////

work with poll but not without !!! heisenbug!!!

~toggle_fx.(~namex, ~albert+++\fx, \filter -> { arg in;
	var sig;
	var sig1, sig2, sig3, sig4, sig5, sig6, sig7, sig8;
	sig = in;
	sig1 = RLPF.ar(sig ! 8, ( 
		Ndef(~albert+++\freq)*(1..8)/2
		* Duty.kr(1/8/~t, 0, Dseq([
			1,4,1,1,
			1,4,2,4,
			1,4,1,1,
			2,2,1.2,1.4,
		],inf))
	).poll.clip(20,1000)
	, 0.2)*LFPulse.ar((1..8)*1).range(0,1).lag(0.1);
	//sig = SelectX.ar( SinOsc.kr(1/4*~t * (1..8)*8).range(0,1), [sig, sig1]);
	sig = sig1;
	sig = sig.sum;
	sig.debug("sig");
	sig;

});


////////////////::

une fonction pour definir un Ndef sans le lancer
trouvé ! voir demo/ndef.scd


/////////////////

quelles sont les priorités ? les aspects de SC que j'aimerais mettre en lumiere, huiler, faciliter ?

- la gestion des differents parametres des differents objets sonores (ndef, pdef)
	- en faire des listes
	- les mapper sur du midi
	- les mapper sur des gui
	- presets et morphing
	----------> Param

quelles sont les differentes facons de gerer le midi et la gui des parametres dans SC ?
pareil pour les midi scores (notes et courbes de paam)
il faut pouvoir les enregistrer, les afficher dans des belles timeline
les 
- ddwVoicer
- ktlLoop
- modality

- systeme de mapping des numero midi vers des noms et des structures
- systeme de mapping des noms midi vers des parametres
- systeme de mapping des param vers des gui
- enregistrement des events/notes
- enregistrement des param


//////////////////////////// ////////////////////////////
model pour l'enregistrement et la lecture de
	- parametres
	- notes

///////////////////////////// parametres
/////////////// ndef


Ndef(~name+++\fx).put(0, { arg amp=0.1;
	var sig;
	
	sig = SinOsc.ar(\freq.kr(400)) ;
	amp = amp * \gain.kr(1);
	sig = Splay.ar(sig, \spread.kr(0.8), amp, \pan.kr(0));
	sig;
});

ParamRecorder(~name).play;

// END

ParamRecorder(~name).paramsToRecord_([ Param(Ndef(~name+++\fx), \freq) ])
ParamRecorder(~name).startRec // should be quantized
ParamRecorder(~name).stopRec

at the begining, ParamRecorder(~name).embedInStream (called automatically when used in Ndef \set -> construct) is an empty pattern so nothing is set and you can change freely the parameters
recording is done by listening to \set signals (SimpleController)
when recording ends, it change the content of ParamRecorder(~name).embedInStream to a list of event setting the parameters

problem: if there is Param's from different Ndef, all is put into the wrong Ndef
solution: this line is run by ParamRecorder : Ndef(~name+++\fx).put(10, \set -> ParamRecorder(~name));
	just need a way to specify Ndef slot index
	and ParamRecorder(~name).play; start it

/////////////// pdef

Pdef(~name +++ \pre, 
	Pdef(~name+++\macro) <>
	Pbind(
		\freq, 100,
	)
);

ParamRecorder(~name).play;

// END


ParamRecorder(~name).paramsToRecord_([ Param(Pdef(~name+++\macro), \freq) ])
ParamRecorder(~name).startRec // should be quantized
ParamRecorder(~name).stopRec

at the begining, Pdef(~name+++\macro) contains an empty Pbind, ParamRecorder(~name).play; does nothing
recording is done by listening to \set signals (SimpleController)
when recording ends, there is a Pdef(~name+++\macro).setBusMode(\freq) and ParamRecorder(~name).play; play the contained event list which set the bus with (\type, \bus, \value, ..., \bus, Pdef(~name+++\macro).get(\freq))

problem: if there is Param's from different Pdef, what happen ?
solution: 
	ParamRecorder(~name).play; run a Ppar running different stream setting the differents bus from all Pdefs


problem: there is different Pdef and Ndef in paramsToRecord
solution: 
	ParamRecorder(~name).play; run a Ppar running different stream setting the differents bus from all Pdefs
	and run also the differents Ndef \set


///////////////////////////// notes
/////////////// pdef


Pdef(~name +++ \pre, 
	Pdef(~name+++\score) <>
	Pbind(
		\freq, 100,
	)
);


// END

NoteRecorder(~name).


///////////////// TODO on veco
- 
